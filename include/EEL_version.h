/*(LGPL)
---------------------------------------------------------------------------
    ==> DO NOT EDIT! Automatically generated by configure.in.
---------------------------------------------------------------------------
	EEL_version.h - EEL Version Control (API)
---------------------------------------------------------------------------
 * Copyright (C) 2003, 2005-2006, 2009 David Olofson
 *
 * This library is free software;  you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation;  either version 2.1 of the License, or (at
 * your option) any later version.
 *
 * This library  is  distributed  in  the hope that it will be useful,  but
 * WITHOUT   ANY   WARRANTY;   without   even   the   implied  warranty  of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser
 * General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library;  if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

#ifndef	EEL_VERSION_H
#define	EEL_VERSION_H

/*
 * Note: eel_lib_version() is declared in eel.h.
 */

/*
 * EEL version codes are unsigned 32 bit integers. The
 * major version number is stored in the top 8 bits,
 * the minor version in the next lower 8 bits, and the
 * patch level in bits 15..8.
 *
 * The low byte is reserved for snapshot number, and
 * should generally not be considered by applications,
 * other than for diagnostic messages for bug reports.
 * (That's why EEL_MAKE_VERSION doesn't have an argument
 * for it! :-)
 */

#define	EEL_MAJOR_VERSION	0
#define EEL_MINOR_VERSION	3
#define	EEL_MICRO_VERSION	6
#define	EEL_SNAPSHOT		0

/*
 * Make a version code out of arbitrary major, minor and
 * micro values. This is probably what you want if you
 * check library versions at run time!
 */
#define EEL_MAKE_VERSION(ma, mi, u)	((ma<<24)|(mi<<16)|(u<<8))

/*
 * Evaluates to the version of the library headers used.
 * NOTE: This version code includes the snapshot field!
 */
#define EEL_COMPILED_VERSION \
	(EEL_MAKE_VERSION(EEL_MAJOR_VERSION, EEL_MINOR_VERSION,	\
			EEL_MICRO_VERSION) | EEL_SNAPSHOT)

/*
 * Extracts individual fields from a version code, for
 * printing, or whatever special tests applications may
 * want to perform.
 */
#define	EEL_GET_MAJOR(ver)	(((ver)>>24) & 0xff)
#define	EEL_GET_MINOR(ver)	(((ver)>>16) & 0xff)
#define	EEL_GET_MICRO(ver)	(((ver)>>8) & 0xff)
#define	EEL_GET_SNAPSHOT(ver)	((ver) & 0xff)

#endif /* EEL_VERSION_H */
