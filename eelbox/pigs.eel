/////////////////////////////////////////////
// pigs.eel - Bouncing Pigs
// Copyright (C) 2005, 2010 David Olofson
/////////////////////////////////////////////

import "SDL";
import "SDL_image" as IMG;

static IM, static IA, static IC, static LAST = 0;

procedure rnd_reset()
{
	IM = 139968;
	IA = 3877;
	IC = 29573;
	LAST = 42;
}

rnd_reset();

function rnd(max)
{
	LAST = (LAST * IA + IC) % IM;
	return (max * LAST) / IM;
}

export function main<args>
{
	if specified args[1]
		local npigs = (integer)args[1];
	else
		npigs = 10;
	
	local screen = SetVideoMode(640, 480, 0, HWSURFACE | DOUBLEBUF);
	SetCaption("EELBox Bouncing Pigs", args[0]);
	ShowCursor(0);

	// Load pig sprite image
	local pigframes = IMG.Load("pigframes2.png");
	SetAlpha(pigframes);
	local pig = [];
	for local i = 0, 12 - 1
	{
		pig[i] = Surface[0, 64, 48, 32];
		local sr = Rect[(i % 3) * 64, (integer)(i / 3) * 48, 64, 48];
		BlitSurface(pigframes, sr, pig[i], nil);
		SetAlpha(pig[i], SRCALPHA | RLEACCEL);
		pig[i] = DisplayFormatAlpha(pig[i]);
	}
	pigframes = nil;

	// Initialize pigs
	local pigs = [];
	rnd_reset();
	for local i = 0, npigs - 1
		pigs[i] = table[.x	rnd(640 - 64),
				.y	rnd(300),
				.dx	rnd(400) - 200,
				.dy	0,
				.frame	0,
				.dframe	rnd(100) - 50];

	local dr = Rect[];
	local lt = GetTicks();
	while true
	mainloop:
	{
		// Calculate delta time
		local nt = GetTicks();
		local dt = (nt - lt) * .001;
		lt = nt;

		// Clear screen
		FillRect(nil, nil, MapColor(screen, 40, 60, 100));

		for local i = 0, npigs - 1
		{
			local p = pigs[i];
			// Draw pig
			dr.x = p.x;
			dr.y = p.y;
			BlitSurface(pig[(integer)p.frame], nil, nil, dr);

			// Move pig
			pigs[i].dy += 300 * dt;
			pigs[i].x += pigs[i].dx * dt;
			pigs[i].y += pigs[i].dy * dt;
			pigs[i].frame += pigs[i].dframe * dt;

			// anim wrap
			if pigs[i].frame < 0
				pigs[i].frame = 12 - -pigs[i].frame % 12;
			else
				pigs[i].frame %= 12;

			// x bounce
			if pigs[i].x < 0
			{
				pigs[i].dx = -pigs[i].dx;
				pigs[i].x = -pigs[i].x;
			}
			else if pigs[i].x > 640 - 64
			{
				pigs[i].dx = -pigs[i].dx;
				pigs[i].x -= pigs[i].x - (640 - 64);
			}

			// y bounce
			if pigs[i].y > 480 - 48
			{
				pigs[i].dy = -pigs[i].dy;
				pigs[i].y -= pigs[i].y - (480 - 48);
			}
		}

		// Make the update visible
		Flip();
		Delay(0);

		// Check for exit request
		while true
		{
			local ev = PollEvent();
			if not ev
				break;
			switch ev.type
			  case KEYUP
				if ev.sym == KESCAPE
					break mainloop;
			  case MOUSEBUTTONUP, QUIT
				break mainloop;
		}
	}
	return 0;
}
